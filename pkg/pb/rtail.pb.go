// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rtail.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	rtail.proto

It has these top-level messages:
	AgentMessage
	FileRequest
	Line
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AgentMessage_Type int32

const (
	AgentMessage_INIT AgentMessage_Type = 0
	AgentMessage_LINE AgentMessage_Type = 1
)

var AgentMessage_Type_name = map[int32]string{
	0: "INIT",
	1: "LINE",
}
var AgentMessage_Type_value = map[string]int32{
	"INIT": 0,
	"LINE": 1,
}

func (x AgentMessage_Type) String() string {
	return proto.EnumName(AgentMessage_Type_name, int32(x))
}
func (AgentMessage_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type AgentMessage struct {
	Type AgentMessage_Type `protobuf:"varint,1,opt,name=type,enum=pb.AgentMessage_Type" json:"type,omitempty"`
	Line *Line             `protobuf:"bytes,2,opt,name=line" json:"line,omitempty"`
}

func (m *AgentMessage) Reset()                    { *m = AgentMessage{} }
func (m *AgentMessage) String() string            { return proto.CompactTextString(m) }
func (*AgentMessage) ProtoMessage()               {}
func (*AgentMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AgentMessage) GetType() AgentMessage_Type {
	if m != nil {
		return m.Type
	}
	return AgentMessage_INIT
}

func (m *AgentMessage) GetLine() *Line {
	if m != nil {
		return m.Line
	}
	return nil
}

type FileRequest struct {
	Provider string `protobuf:"bytes,1,opt,name=provider" json:"provider,omitempty"`
	Path     string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Last     uint32 `protobuf:"varint,3,opt,name=last" json:"last,omitempty"`
	Follow   bool   `protobuf:"varint,4,opt,name=follow" json:"follow,omitempty"`
	Key      string `protobuf:"bytes,5,opt,name=key" json:"key,omitempty"`
}

func (m *FileRequest) Reset()                    { *m = FileRequest{} }
func (m *FileRequest) String() string            { return proto.CompactTextString(m) }
func (*FileRequest) ProtoMessage()               {}
func (*FileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FileRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *FileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FileRequest) GetLast() uint32 {
	if m != nil {
		return m.Last
	}
	return 0
}

func (m *FileRequest) GetFollow() bool {
	if m != nil {
		return m.Follow
	}
	return false
}

func (m *FileRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type Line struct {
	Line string `protobuf:"bytes,1,opt,name=line" json:"line,omitempty"`
	Eof  bool   `protobuf:"varint,2,opt,name=eof" json:"eof,omitempty"`
	Key  string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
}

func (m *Line) Reset()                    { *m = Line{} }
func (m *Line) String() string            { return proto.CompactTextString(m) }
func (*Line) ProtoMessage()               {}
func (*Line) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Line) GetLine() string {
	if m != nil {
		return m.Line
	}
	return ""
}

func (m *Line) GetEof() bool {
	if m != nil {
		return m.Eof
	}
	return false
}

func (m *Line) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func init() {
	proto.RegisterType((*AgentMessage)(nil), "pb.AgentMessage")
	proto.RegisterType((*FileRequest)(nil), "pb.FileRequest")
	proto.RegisterType((*Line)(nil), "pb.Line")
	proto.RegisterEnum("pb.AgentMessage_Type", AgentMessage_Type_name, AgentMessage_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Proxy service

type ProxyClient interface {
	Register(ctx context.Context, opts ...grpc.CallOption) (Proxy_RegisterClient, error)
	Get(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (Proxy_GetClient, error)
}

type proxyClient struct {
	cc *grpc.ClientConn
}

func NewProxyClient(cc *grpc.ClientConn) ProxyClient {
	return &proxyClient{cc}
}

func (c *proxyClient) Register(ctx context.Context, opts ...grpc.CallOption) (Proxy_RegisterClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Proxy_serviceDesc.Streams[0], c.cc, "/pb.Proxy/Register", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxyRegisterClient{stream}
	return x, nil
}

type Proxy_RegisterClient interface {
	Send(*AgentMessage) error
	Recv() (*FileRequest, error)
	grpc.ClientStream
}

type proxyRegisterClient struct {
	grpc.ClientStream
}

func (x *proxyRegisterClient) Send(m *AgentMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *proxyRegisterClient) Recv() (*FileRequest, error) {
	m := new(FileRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *proxyClient) Get(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (Proxy_GetClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Proxy_serviceDesc.Streams[1], c.cc, "/pb.Proxy/Get", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxyGetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Proxy_GetClient interface {
	Recv() (*Line, error)
	grpc.ClientStream
}

type proxyGetClient struct {
	grpc.ClientStream
}

func (x *proxyGetClient) Recv() (*Line, error) {
	m := new(Line)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Proxy service

type ProxyServer interface {
	Register(Proxy_RegisterServer) error
	Get(*FileRequest, Proxy_GetServer) error
}

func RegisterProxyServer(s *grpc.Server, srv ProxyServer) {
	s.RegisterService(&_Proxy_serviceDesc, srv)
}

func _Proxy_Register_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProxyServer).Register(&proxyRegisterServer{stream})
}

type Proxy_RegisterServer interface {
	Send(*FileRequest) error
	Recv() (*AgentMessage, error)
	grpc.ServerStream
}

type proxyRegisterServer struct {
	grpc.ServerStream
}

func (x *proxyRegisterServer) Send(m *FileRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *proxyRegisterServer) Recv() (*AgentMessage, error) {
	m := new(AgentMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Proxy_Get_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProxyServer).Get(m, &proxyGetServer{stream})
}

type Proxy_GetServer interface {
	Send(*Line) error
	grpc.ServerStream
}

type proxyGetServer struct {
	grpc.ServerStream
}

func (x *proxyGetServer) Send(m *Line) error {
	return x.ServerStream.SendMsg(m)
}

var _Proxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Proxy",
	HandlerType: (*ProxyServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Register",
			Handler:       _Proxy_Register_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Get",
			Handler:       _Proxy_Get_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rtail.proto",
}

func init() { proto.RegisterFile("rtail.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0xbb, 0xcd, 0xb6, 0xa4, 0xd3, 0xf7, 0xd5, 0x30, 0xa0, 0x84, 0xe0, 0x21, 0x04, 0x0f,
	0xf1, 0x12, 0x4a, 0x7b, 0x17, 0x3c, 0xa8, 0x14, 0x6a, 0x91, 0xa5, 0x5f, 0x20, 0xc1, 0x69, 0x0d,
	0x2e, 0xdd, 0x75, 0x77, 0xfd, 0x13, 0xfc, 0xf2, 0xb2, 0xab, 0x86, 0xd2, 0xdb, 0x6f, 0x66, 0x9e,
	0x27, 0xcf, 0x64, 0x16, 0xa6, 0xc6, 0xd5, 0xad, 0xac, 0xb4, 0x51, 0x4e, 0xe1, 0x50, 0x37, 0x85,
	0x85, 0x7f, 0x37, 0x3b, 0xda, 0xbb, 0x07, 0xb2, 0xb6, 0xde, 0x11, 0x5e, 0x01, 0x77, 0x9d, 0xa6,
	0x94, 0xe5, 0xac, 0x3c, 0x99, 0x9f, 0x55, 0xba, 0xa9, 0x0e, 0xe7, 0xd5, 0xa6, 0xd3, 0x24, 0x82,
	0x04, 0x2f, 0x80, 0xcb, 0x76, 0x4f, 0xe9, 0x30, 0x67, 0xe5, 0x74, 0x1e, 0x7b, 0xe9, 0xaa, 0xdd,
	0x93, 0x08, 0xdd, 0x22, 0x03, 0xee, 0xb5, 0x18, 0x03, 0x5f, 0xae, 0x97, 0x9b, 0x64, 0xe0, 0x69,
	0xb5, 0x5c, 0xdf, 0x26, 0xac, 0xf8, 0x82, 0xe9, 0x5d, 0x2b, 0x49, 0xd0, 0xeb, 0x1b, 0x59, 0x87,
	0x19, 0xc4, 0xda, 0xa8, 0xf7, 0xf6, 0x89, 0x4c, 0xc8, 0x9d, 0x88, 0xbe, 0x46, 0x04, 0xae, 0x6b,
	0xf7, 0x1c, 0x42, 0x26, 0x22, 0xb0, 0xef, 0xc9, 0xda, 0xba, 0x34, 0xca, 0x59, 0xf9, 0x5f, 0x04,
	0xc6, 0x73, 0x18, 0x6f, 0x95, 0x94, 0xea, 0x23, 0xe5, 0x39, 0x2b, 0x63, 0xf1, 0x5b, 0x61, 0x02,
	0xd1, 0x0b, 0x75, 0xe9, 0x28, 0xd8, 0x3d, 0x16, 0xd7, 0xc0, 0xfd, 0x9a, 0xe1, 0x2b, 0x7e, 0xfd,
	0x9f, 0xc4, 0xc0, 0x5e, 0x4d, 0x6a, 0x1b, 0xc2, 0x62, 0xe1, 0xf1, 0xcf, 0x1f, 0xf5, 0xfe, 0x79,
	0x03, 0xa3, 0x47, 0xa3, 0x3e, 0x3b, 0x5c, 0x40, 0x2c, 0x68, 0xd7, 0x5a, 0x47, 0x06, 0x93, 0xe3,
	0x43, 0x65, 0xa7, 0xbe, 0x73, 0xf0, 0x97, 0xc5, 0xa0, 0x64, 0x33, 0x86, 0x97, 0x10, 0xdd, 0x93,
	0xc3, 0xe3, 0x69, 0xd6, 0x9f, 0xaf, 0x18, 0xcc, 0x58, 0x33, 0x0e, 0x0f, 0xb4, 0xf8, 0x0e, 0x00,
	0x00, 0xff, 0xff, 0x43, 0xcb, 0x40, 0x60, 0xaf, 0x01, 0x00, 0x00,
}
